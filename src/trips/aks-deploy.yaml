apiVersion: apps/v1
kind: Deployment
metadata:
  name: trips
  namespace: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: trips
  template:
    metadata:
      creationTimestamp: 
      labels:
        app: trips
        aadpodidbinding: keyvault-user
    spec:
      containers:
      - name: trips
        image: registryine4658.azurecr.io/tripinsights/trips:1.0
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: SQL_DBNAME
          value: mydrivingDB
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: OPENAPI_DOCS_URI
          value: https://localhost:80
        volumeMounts:
            - name: secrets
              mountPath: "/secrets"
              readOnly: true
      volumes:
      - name: secrets
        flexVolume:
          driver: "azure/kv"
          options:
            usepodidentity: "true"         # [OPTIONAL] if not provided, will default to "false"
            keyvaultname: "team10-kv"      # the name of the KeyVault
            keyvaultobjectnames: "sqluser;sqlpassword;sqlserver"        # list of KeyVault object names (semi-colon separated)
            keyvaultobjecttypes: "secret;secret;secret"    # list of KeyVault object types: secret, key or cert (semi-colon separated)
            #keyvaultobjectversions: ""     # [OPTIONAL] list of KeyVault object versions (semi-colon separated), will get latest if empty
            keyvaultobjectaliases: "SQL_USER;SQL_PASSWORD;SQL_SERVER"
            resourcegroup: "teamResources"  # [REQUIRED FOR < v0.0.14] the resource group of the KeyVault
            subscriptionid: "f6892e2c-404f-44a4-8889-b4efa546cdff"             # [REQUIRED FOR < v0.0.14] the subscription ID of the KeyVault
            tenantid: "1306c3ab-99cf-443b-bacf-a79b9d3cd7fa"                   # the tenant ID of the KeyVault
---
apiVersion: v1
kind: Service
metadata:
  name: trips
  namespace: api
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: trips
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: trips-ingress
  namespace: api
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: trips
          servicePort: 80
        path: /(api/trips/*.*)
